import java.util.zip.Deflater;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;


public class Compression {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
			Text text = new Text("blahbfadfgsdhgfshgdhlahblah");
			Compression c = new Compression();
			
			System.out.println(c.compress(text));
			
	}

	public IntWritable compress(Text field) {
		
		Deflater df = new Deflater();
		df = stageCompress(field); //stage field to be compressed
		
		IntWritable compressed = new IntWritable(flattenFile(df));   // compress data
		df.end();   //end compression process
		
		return compressed;	
	}
	
	public Deflater stageCompress(Text field) {
		
		Deflater compressor = new Deflater(Deflater.BEST_COMPRESSION);
		byte[] input = field.getBytes();
		
		compressor.setInput(input); //input data to be compressed
		compressor.finish(); // done reading in data

		return compressor;
	}
	
	
	public int flattenFile(Deflater fileToCompress) {
		
		byte[] readbuffer = new byte[1024];
		int readCount = 0;
		
		while(!fileToCompress.finished())
			readCount = fileToCompress.deflate(readbuffer);
		
		return readCount;
	}
	
}
